"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5534],{85534:(e,t,r)=>{r.d(t,{Bn:()=>l,MT:()=>a,Y:()=>s,fm:()=>i});var o=r(11712);let a={getAllEvents:async()=>{try{let{data:e,error:t}=await o.ND.from("events").select("*, categories(*), created_by:users(*)");if(t)throw t;return e}catch(e){throw console.error("Get events error:",e),e}},getEventById:async e=>{try{let{data:t,error:r}=await o.ND.from("events").select("*, categories(*), created_by:users(*)").eq("id",e).single();if(r)throw r;return t}catch(e){throw console.error("Get event error:",e),e}},createEvent:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{data:r,error:a}=await o.ND.from("users").select("organization_id, role_in_org").eq("id",t.id).single();if(a)throw a;let l=null;if(e.image){let t=e.image,r=t.name.split(".").pop(),a="".concat(Date.now(),".").concat(r),i="".concat(a),{data:s,error:n}=await o.ND.storage.from("event-images").upload(i,t);if(n)throw n;let{data:{publicUrl:c}}=o.ND.storage.from("event-images").getPublicUrl(i);l=c}let{image:i,...s}=e;if((null==r?void 0:r.organization_id)&&("ADMIN"===r.role_in_org||"OWNER"===r.role_in_org)){let{data:e,error:a}=await o.ND.rpc("create_organization_event",{p_title:s.title,p_description:s.description,p_category_id:s.category_id,p_location:s.location,p_price:s.price,p_date:s.date,p_time:s.time,p_image_url:l,p_organization_id:r.organization_id,p_created_by:t.id});if(a)throw a;let{data:i,error:n}=await o.ND.from("events").select("*, categories(*), created_by:users(*)").eq("id",e).single();if(n)throw n;return i}{let{data:e,error:r}=await o.ND.from("events").insert([{...s,image_url:l,created_by:t.id}]).select().single();if(r)throw r;return e}}catch(e){throw console.error("Create event error:",e),e}},updateEvent:async(e,t)=>{try{let r=t.image_url;if(t.image&&"string"!=typeof t.image){let e=t.image,a=e.name.split(".").pop(),l="".concat(Date.now(),".").concat(a),i="".concat(l),{data:s,error:n}=await o.ND.storage.from("event-images").upload(i,e);if(n)throw n;let{data:{publicUrl:c}}=o.ND.storage.from("event-images").getPublicUrl(i);r=c}let{image:a,...l}=t,{data:i,error:s}=await o.ND.from("events").update({...l,image_url:r}).eq("id",e).select().single();if(s)throw s;return i}catch(e){throw console.error("Update event error:",e),e}},deleteEvent:async e=>{try{let{error:t}=await o.ND.from("events").delete().eq("id",e);if(t)throw t;return{success:!0}}catch(e){throw console.error("Delete event error:",e),e}},getOrganizationEvents:async e=>{try{let{data:t,error:r}=await o.ND.from("events").select("*, categories(*), created_by:users(*)").eq("organization_id",e).order("created_at",{ascending:!1});if(r)throw r;return t}catch(e){throw console.error("Get organization events error:",e),e}}},l={getUserBookings:async()=>{try{let{data:{user:e}}=await o.ND.auth.getUser();if(!e)throw Error("User not authenticated");let{data:t,error:r}=await o.ND.from("bookings").select("*, event:events(*)").eq("user_id",e.id);if(r)throw r;return t}catch(e){throw console.error("Get user bookings error:",e),e}},getAllBookings:async()=>{try{let{data:e,error:t}=await o.ND.from("bookings").select("*, event:events(*), user:users(*)");if(t)throw t;return e}catch(e){throw console.error("Get all bookings error:",e),e}},createBooking:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{data:r,error:a}=await o.ND.from("bookings").insert([{event_id:e,user_id:t.id,status:"CONFIRMED"}]).select().single();if(a)throw a;return r}catch(e){throw console.error("Create booking error:",e),e}},cancelBooking:async e=>{try{let{data:t,error:r}=await o.ND.from("bookings").update({status:"CANCELLED"}).eq("id",e).select().single();if(r)throw r;return t}catch(e){throw console.error("Cancel booking error:",e),e}}},i={getAllCategories:async()=>{try{let{data:e,error:t}=await o.ND.from("categories").select("*");if(t)throw t;return e}catch(e){throw console.error("Get categories error:",e),e}},getCategoryById:async e=>{try{let{data:e,error:t}=await o.ND.from("categories").select("*");if(t)throw t;return e}catch(e){throw console.error("Get category error:",e),e}},createCategory:async e=>{try{let{data:t,error:r}=await o.ND.from("categories").insert([e]).select().single();if(r)throw r;return t}catch(e){throw console.error("Create category error:",e),e}},updateCategory:async(e,t)=>{try{let{data:r,error:a}=await o.ND.from("categories").update(t).eq("id",e).select().single();if(a)throw a;return r}catch(e){throw console.error("Update category error:",e),e}},deleteCategory:async e=>{try{let{error:t}=await o.ND.from("categories").delete().eq("id",e);if(t)throw t;return{success:!0}}catch(e){throw console.error("Delete category error:",e),e}}},s={followUser:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");if(t.id===e)throw Error("Cannot follow yourself");let{data:r,error:a}=await o.ND.from("follows").insert([{follower_id:t.id,target_id:e,target_type:"USER"}]).select().single();if(a)throw a;return r}catch(e){throw console.error("Follow user error:",e),e}},unfollowUser:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{error:r}=await o.ND.from("follows").delete().eq("follower_id",t.id).eq("target_id",e).eq("target_type","USER");if(r)throw r;return{success:!0}}catch(e){throw console.error("Unfollow user error:",e),e}},followEvent:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{data:r,error:a}=await o.ND.from("follows").insert([{follower_id:t.id,target_id:e,target_type:"EVENT"}]).select().single();if(a)throw a;return r}catch(e){throw console.error("Follow event error:",e),e}},unfollowEvent:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{error:r}=await o.ND.from("follows").delete().eq("follower_id",t.id).eq("target_id",e).eq("target_type","EVENT");if(r)throw r;return{success:!0}}catch(e){throw console.error("Unfollow event error:",e),e}},followCategory:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{data:r,error:a}=await o.ND.from("follows").insert([{follower_id:t.id,target_id:e,target_type:"CATEGORY"}]).select().single();if(a)throw a;return r}catch(e){throw console.error("Follow category error:",e),e}},unfollowCategory:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let{error:r}=await o.ND.from("follows").delete().eq("follower_id",t.id).eq("target_id",e).eq("target_type","CATEGORY");if(r)throw r;return{success:!0}}catch(e){throw console.error("Unfollow category error:",e),e}},isFollowing:async(e,t)=>{try{let{data:{user:r}}=await o.ND.auth.getUser();if(!r)return!1;let{data:a,error:l}=await o.ND.from("follows").select("id").eq("follower_id",r.id).eq("target_id",e).eq("target_type",t).single();if(l&&"PGRST116"!==l.code)throw l;return!!a}catch(e){return console.error("Check follow status error:",e),!1}},getUserFollows:async e=>{try{let{data:{user:t}}=await o.ND.auth.getUser();if(!t)throw Error("User not authenticated");let r=o.ND.from("follows").select("*").eq("follower_id",t.id);e&&(r=r.eq("target_type",e));let{data:a,error:l}=await r;if(l)throw l;return await Promise.all(a.map(async e=>{let t=null;if("USER"===e.target_type){let{data:r}=await o.ND.from("users").select("*").eq("id",e.target_id).single();t=r}else if("EVENT"===e.target_type){let{data:r}=await o.ND.from("events").select("*").eq("id",e.target_id).single();t=r}else if("CATEGORY"===e.target_type){let{data:r}=await o.ND.from("categories").select("*").eq("id",e.target_id).single();t=r}return{...e,target_user:"USER"===e.target_type?t:null,target_event:"EVENT"===e.target_type?t:null,target_category:"CATEGORY"===e.target_type?t:null}}))}catch(e){throw console.error("Get user follows error:",e),e}},getUserFollowers:async e=>{try{let{data:t,error:r}=await o.ND.from("follows").select("*").eq("target_id",e).eq("target_type","USER");if(r)throw r;return await Promise.all(t.map(async e=>{let{data:t}=await o.ND.from("users").select("*").eq("id",e.follower_id).single();return{...e,follower:t}}))}catch(e){throw console.error("Get user followers error:",e),e}},getEventFollowers:async e=>{try{let{data:t,error:r}=await o.ND.from("follows").select("*").eq("target_id",e).eq("target_type","EVENT");if(r)throw r;return await Promise.all(t.map(async e=>{let{data:t}=await o.ND.from("users").select("*").eq("id",e.follower_id).single();return{...e,follower:t}}))}catch(e){throw console.error("Get event followers error:",e),e}},getCategoryFollowers:async e=>{try{let{data:t,error:r}=await o.ND.from("follows").select("*").eq("target_id",e).eq("target_type","CATEGORY");if(r)throw r;return await Promise.all(t.map(async e=>{let{data:t}=await o.ND.from("users").select("*").eq("id",e.follower_id).single();return{...e,follower:t}}))}catch(e){throw console.error("Get category followers error:",e),e}},getUserProfile:async e=>{try{let{data:t,error:r}=await o.ND.from("users").select("*").eq("id",e).single();if(r)throw r;let{count:a}=await o.ND.from("follows").select("*",{count:"exact",head:!0}).eq("target_id",e).eq("target_type","USER"),{count:l}=await o.ND.from("follows").select("*",{count:"exact",head:!0}).eq("follower_id",e);return{...t,follower_count:a||0,following_count:l||0}}catch(e){throw console.error("Get user profile error:",e),e}},getEventsWithFollowCounts:async()=>{try{let{data:e,error:t}=await o.ND.from("events").select("*, categories(*), created_by:users(*)");if(t)throw t;return e}catch(e){throw console.error("Get events with follow counts error:",e),e}},getCategoriesWithFollowCounts:async()=>{try{let{data:e,error:t}=await o.ND.from("categories").select("*");if(t)throw t;return e}catch(e){throw console.error("Get categories with follow counts error:",e),e}}}}}]);